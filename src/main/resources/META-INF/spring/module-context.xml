<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<description>Integral Ads interview test job setup.</description>

 	
	<batch:job id="job1">
	
	<batch:decision id="decision" decider="decider">
    	<batch:next on="csv" to="csv" />
    	<batch:next on="tab" to="tab" />
  	</batch:decision>
  	
		<batch:step id="csv"  >	
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="cvsFileItemReader" writer="writer" commit-interval="1" />
				
				<batch:listeners>
					<batch:listener ref="customStepListener" />
					<!-- 
					<listener ref="customItemReaderListener" />
					<listener ref="customItemWriterListener" />
					 -->
			    </batch:listeners>
				
			</batch:tasklet>
		</batch:step>
		
		<batch:step id="tab"  >	
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="tabFileItemReader" writer="writer" commit-interval="1" />
				
				<batch:listeners>
					<batch:listener ref="customStepListener" />
					<!-- 
					<listener ref="customItemReaderListener" />
					<listener ref="customItemWriterListener" />
					 -->
			    </batch:listeners>
			</batch:tasklet>
		</batch:step>
	
	</batch:job> 
	

<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
	<property name="lineMapper">
		<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="delimiter">
						<util:constant
							static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_COMMA" />
					</property>
					<property name="names" value="ID,NAME,POINTS" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="targetType"
						value="com.excelsiorsoft.integral.domain.Dto" />
				</bean>
			</property>
		</bean>
	</property>
	<property name="resource" value="classpath:#{jobParameters['fileName']}" />
	
     <property name="linesToSkip" value="1" />
</bean>

<bean id="tabFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
	<property name="lineMapper">
		<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="delimiter">
						<util:constant
							static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
					</property>
					<property name="names" value="ID,NAME,POINTS" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="targetType"
						value="com.excelsiorsoft.integral.domain.Dto" />
				</bean>
			</property>
		</bean>
	</property>
	<property name="resource" value="classpath:#{jobParameters['fileName']}" />
	
     <property name="linesToSkip" value="1" />
</bean>

	<bean id="customStepListener" class="com.excelsiorsoft.integral.process.AggregatingStepListener" />

	<bean id="accumulator" class="com.excelsiorsoft.integral.process.Accumulator" />
	
</beans>
